@page "/EditBlog"

@rendermode InteractiveServer
@using Server.Data
@using SharedClasses.Models.BlogModels
@inject ManageBlogsPageDataService ds

<h3>Edit Blog</h3>
@if (Blog == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-5 col-md-3 text-end">Title:</div>
        <div class="col-7 col-md-9"><input type="text" @bind="Blog.Title" @bind:after="OnTitleChange" /></div>
    </div>
    <div class="row">
        <div class="col-5 col-md-3 text-end">Route:</div>
        <div class="col-7 col-md-9"><input type="text" @bind="Blog.Route" /></div>
    </div>
    <div class="row">
        <div class="col-5 col-md-3 text-end">Description:</div>
        <div class="col-7 col-md-9"><textarea @bind="Blog.Description"/></div>
    </div>
}
<Button class="mt-3" Color="ButtonColor.Success" Type="ButtonType.Button" @onclick="OnSubmit">
    Submit
</Button>

<Button class="mt-3" Color="ButtonColor.None" Type="ButtonType.Button" @onclick="OnCancel">
    Cancel
</Button>


@code {
    [Parameter] public Blog? Blog { get; set; }
    [Parameter] public Action<Blog?>? OnClickCallback { get; set; }

    protected override void OnInitialized()
    {
        if (Blog==null)
        {
            Blog = new Blog();
        }
    }
    private void OnTitleChange()
    {
        if (Blog is not null)
        {
            Blog.Route = Blog.Title?.Replace(' ', '-');
        }
    }

    private void OnSubmit(MouseEventArgs e)
    {
        if (OnClickCallback != null)
        {
            OnClickCallback(Blog);
        }
    }

    private void OnCancel(MouseEventArgs e)
    {
        if (OnClickCallback != null)
        {
            OnClickCallback(null);
        }
    }
}
